//
//  jobsConfiguration.swift
//  StackTracker
//
//  Created by Kayode Hadilou ADJE on 8.09.2018.
//  Copyright (c) 2018 Kayode Hadilou ADJE. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Foundation
import Swinject
import SwinjectAutoregistration

class jobsAssembly: Assembly {

    public func assemble(container: Container) {

        container.autoregister(IjobsPresentationLogic.self, 
        						argument: IjobsDisplayLogic.self, 
						        initializer: jobsPresenter.init)
        container.autoregister(IjobsBusinessLogic.self, 
						        argument: IjobsPresentationLogic.self, 
						        initializer: jobsInteractor.init)
        container.autoregister(IjobsRoutingLogic.self, 
						        arguments: jobsViewController.self, IjobsDataStore.self, 
						        initializer: jobsRouter.init)

    }
}


class jobsConfigurator {
    class func setup(container: Container) {

        container.storyboardInitCompleted(jobsViewController.self) { _, controller in
            let resolver = assembler.resolver
            let presentationLogic = resolver.resolve(IjobsPresentationLogic.self, 
										            argument: controller as IjobsDisplayLogic)
            let businessLogic = resolver.resolve(IjobsBusinessLogic.self, 
									            argument: presentationLogic!)
            let routingLogic = resolver.resolve(IjobsRoutingLogic.self, 
            									arguments: controller, businessLogic as! IjobsDataStore)

            controller.interactor = businessLogic
            controller.router = routingLogic as? (NSObjectProtocol & IjobsDataPassing & IjobsRoutingLogic)
        }
    }
}
